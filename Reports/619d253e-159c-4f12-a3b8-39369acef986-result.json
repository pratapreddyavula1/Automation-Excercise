{"name": "test_signup", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0xe5fe43+66515]\n\tGetHandleVerifier [0x0xe5fe84+66580]\n\t(No symbol) [0x0xc4dc48]\n\t(No symbol) [0x0xc98704]\n\t(No symbol) [0x0xc98aab]\n\t(No symbol) [0x0xcdf482]\n\t(No symbol) [0x0xcbb214]\n\t(No symbol) [0x0xcdcba7]\n\t(No symbol) [0x0xcbafc6]\n\t(No symbol) [0x0xc8c2ca]\n\t(No symbol) [0x0xc8d154]\n\tGetHandleVerifier [0x0x10b7353+2521315]\n\tGetHandleVerifier [0x0x10b22d3+2500707]\n\tGetHandleVerifier [0x0xe87c94+229924]\n\tGetHandleVerifier [0x0xe781f8+165768]\n\tGetHandleVerifier [0x0xe7ecad+193085]\n\tGetHandleVerifier [0x0xe68158+100072]\n\tGetHandleVerifier [0x0xe682f0+100480]\n\tGetHandleVerifier [0x0xe525aa+11066]\n\tBaseThreadInitThunk [0x0x75985d29+25]\n\tRtlInitializeExceptionChain [0x0x773091eb+107]\n\tRtlGetAppContainerNamedObjectPath [0x0x77309171+561]", "trace": "self = <TestCases.test_signup.TestSignup object at 0x000002B55E4D2DC0>\n\n    def test_signup(self):\n        \"\"\"Verify signup with a valid email and complete user details.\"\"\"\n    \n        # Step 1: Navigate to Signup section\n        self.signup_page.click_signup_link()\n    \n        # Step 2: Validate and enter email\n        name = \"Pratap\"\n        email = Readconfig.getEmail()\n        self.signup_page.enter_name(name)\n    \n        if not validating_email(email):\n            pytest.fail(f\"Invalid email format: {email}\")\n    \n        self.signup_page.enter_email(email)\n        self.signup_page.click_signup_button()\n    \n        if self.signup_page.alreadyEmail_exist()==\"Email Address already exist!\":\n            # pytest.fail(f\"Email Already Exist please try New E-mail: {self.signup_page.alreadyEmail_exist()}\")\n            pytest.skip(\"EMail already Exists...running Login...\")\n    \n    \n    \n    \n        # Step 3: Fill Account Information\n>       self.signup_page.select_gender()\n\nTestCases\\test_signup.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPageObjectModel\\SignUp.py:53: in select_gender\n    WebDriverWait(self.driver,10).until(EC.element_to_be_clickable(self.gender_radio)).click()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0c072446c2e29b63dba63235d9c60ed4\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000002B55E45A430>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0xe5fe43+66515]\nE       \tGetHandleVerifier [0x0xe5fe84+66580]\nE       \t(No symbol) [0x0xc4dc48]\nE       \t(No symbol) [0x0xc98704]\nE       \t(No symbol) [0x0xc98aab]\nE       \t(No symbol) [0x0xcdf482]\nE       \t(No symbol) [0x0xcbb214]\nE       \t(No symbol) [0x0xcdcba7]\nE       \t(No symbol) [0x0xcbafc6]\nE       \t(No symbol) [0x0xc8c2ca]\nE       \t(No symbol) [0x0xc8d154]\nE       \tGetHandleVerifier [0x0x10b7353+2521315]\nE       \tGetHandleVerifier [0x0x10b22d3+2500707]\nE       \tGetHandleVerifier [0x0xe87c94+229924]\nE       \tGetHandleVerifier [0x0xe781f8+165768]\nE       \tGetHandleVerifier [0x0xe7ecad+193085]\nE       \tGetHandleVerifier [0x0xe68158+100072]\nE       \tGetHandleVerifier [0x0xe682f0+100480]\nE       \tGetHandleVerifier [0x0xe525aa+11066]\nE       \tBaseThreadInitThunk [0x0x75985d29+25]\nE       \tRtlInitializeExceptionChain [0x0x773091eb+107]\nE       \tRtlGetAppContainerNamedObjectPath [0x0x77309171+561]\n\n..\\..\\..\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "description": "Verify signup with a valid email and complete user details.", "attachments": [{"name": "stdout", "source": "2381a41c-08d4-447a-b7b1-2918b310cfcc-attachment.txt", "type": "text/plain"}], "start": 1761116621788, "stop": 1761116636472, "uuid": "0fdfe730-76de-4829-bcb5-e177d6631c9c", "historyId": "746d3d5f3eb7ee014263bf00ea6b1c46", "testCaseId": "746d3d5f3eb7ee014263bf00ea6b1c46", "fullName": "TestCases.test_signup.TestSignup#test_signup", "labels": [{"name": "parentSuite", "value": "TestCases"}, {"name": "suite", "value": "test_signup"}, {"name": "subSuite", "value": "TestSignup"}, {"name": "host", "value": "Prathu"}, {"name": "thread", "value": "13428-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.test_signup"}], "titlePath": ["TestCases", "test_signup.py", "TestSignup"]}